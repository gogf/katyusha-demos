// protoc --gofast_out=plugins=grpc:. protocol/*.proto -I/Users/john/Workspace/Go/GOPATH/src/github.com/gogf/katyusha-demos -I/Users/john/Workspace/Go/GOPATH/src

syntax = "proto3";

package pb;

option go_package = "protocol/pb";

import "protocol/common.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// 用户服务
service User {
  // 注册
  rpc SignUp(SignUpReq) returns (NullRes) {}
  // 登录
  rpc SignIn(SignInReq) returns (SignInRes) {}
  // 查询账号唯一性
  rpc CheckPassport(CheckPassportReq) returns (NullRes) {}
  // 查询昵称唯一性
  rpc CheckNickName(CheckNickNameReq) returns (CheckNickNameRes) {}
  // 查询指定用户是否已登录
  rpc IsSignedIn(IsSignedInReq) returns (IsSignedInRes) {}
  // 查询指定用户信息
  rpc GetUser(GetUserReq) returns (GetUserRes) {}
}

// 用户表实体
message UserEntity {
  uint32 Id       = 1; // 用户ID
  string Passport = 2; // 用户账号
  string Password = 3; // 用户密码
  string Nickname = 4; // 用户昵称
  int64  CreateAt = 5; // 创建时间
  int64  UpdateAt = 6; // 更新时间
}

// 注册请求
message SignUpReq {
  // 账号
  string Passport  = 1 [(gogoproto.moretags) = 'v:"required|length:6,16#账号不能为空|账号长度应当在:min到:max之间"'];
  // 密码
  string Password  = 2 [(gogoproto.moretags) = 'v:"required|length:6,16#请输入确认密码|密码长度应当在:min到:max之间"'];
  // 确认密码（往往不需要）
  string Password2 = 3 [(gogoproto.moretags) = 'v:"required|length:6,16|same:Password#密码不能为空|密码长度应当在:min到:max之间|两次密码输入不相等"'];
  // 昵称
  string Nickname  = 4;
}

// 登录请求
message SignInReq {
  // 账号
  string Passport = 1 [(gogoproto.moretags) = 'v:"required#账号不能为空"'];
  // 密码
  string Password = 2 [(gogoproto.moretags) = 'v:"required#密码不能为空"'];
}

// 登录结果
message SignInRes {
  UserEntity User = 1;
}

// 账号唯一性检测请求参数，用于前后端交互参数格式约定
message CheckPassportReq  {
  string Passport = 1 [(gogoproto.moretags) = 'v:"required#账号不能为空"'];
}

// 账号唯一性检测结果
message CheckPassportRes {
  string Ok = 1;
}

// 昵称唯一性检测请求参数，用于前后端交互参数格式约定
message CheckNickNameReq {
  string Nickname = 1 [(gogoproto.moretags) = 'v:"required#昵称不能为空"'];
}

// 昵称唯一性检测结果
message CheckNickNameRes {
  string Ok = 1;
}

// 请求给定的用户是否登录状态
message IsSignedInReq {
  string Passport = 1 [(gogoproto.moretags) = 'v:"required#账号不能为空"'];
}

// 请求登录状态结果
message IsSignedInRes {
  bool Ok = 1;
}

// 查询指定用户信息
message GetUserReq {
  string Passport = 1 [(gogoproto.moretags) = 'v:"required#账号不能为空"'];
}

// 查询指定用户信息结果
message GetUserRes {
  UserEntity User = 1; // 用户信息
}